{"ast":null,"code":"var _jsxFileName = \"/Users/tanyakarpenko/Documents/Homework/goit-react-hw-01-components/src/components/Statistic/Statistic.js\";\nimport PropTypes from 'prop-types';\nimport statisticalData from './statistical-data.json';\nimport styles from './Statistic.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = ({\n  title\n}) => /*#__PURE__*/_jsxDEV(\"section\", {\n  className: styles.statistics,\n  children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: styles.title,\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 15\n  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.list,\n    children: statisticalData.map(({\n      id,\n      label,\n      percentage\n    }) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: styles.item,\n      style: {\n        backgroundColor: randomColor()\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.label,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.percentage,\n        children: [percentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n\n_c = Statistics;\nexport default Statistics;\nStatistics.defaultProps = {\n  title: ''\n};\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired\n  }))\n};\n\nfunction randomColor() {\n  return `rgb(${Math.round(Math.random() * 255)}, ${Math.round(Math.random() * 255)}, ${Math.round(Math.random() * 255)})`;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/Users/tanyakarpenko/Documents/Homework/goit-react-hw-01-components/src/components/Statistic/Statistic.js"],"names":["PropTypes","statisticalData","styles","Statistics","title","statistics","list","map","id","label","percentage","item","backgroundColor","randomColor","defaultProps","propTypes","string","stats","arrayOf","shape","isRequired","number","Math","round","random"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACjB;AAAS,EAAA,SAAS,EAAEF,MAAM,CAACG,UAA3B;AAAA,aACGD,KAAK,iBAAI;AAAI,IAAA,SAAS,EAAEF,MAAM,CAACE,KAAtB;AAAA,cAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,UADZ,eAGE;AAAI,IAAA,SAAS,EAAEF,MAAM,CAACI,IAAtB;AAAA,cACGL,eAAe,CAACM,GAAhB,CAAoB,CAAC;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA;AAAb,KAAD,kBACnB;AACE,MAAA,SAAS,EAAER,MAAM,CAACS,IADpB;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAEC,WAAW;AAA9B,OAHT;AAAA,8BAKE;AAAM,QAAA,SAAS,EAAEX,MAAM,CAACO,KAAxB;AAAA,kBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAM,QAAA,SAAS,EAAEP,MAAM,CAACQ,UAAxB;AAAA,mBAAqCA,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,OAEOF,EAFP;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UAHF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAML,U;AAmBN,eAAeA,UAAf;AAEAA,UAAU,CAACW,YAAX,GAA0B;AACxBV,EAAAA,KAAK,EAAE;AADiB,CAA1B;AAIAD,UAAU,CAACY,SAAX,GAAuB;AACrBX,EAAAA,KAAK,EAAEJ,SAAS,CAACgB,MADI;AAErBC,EAAAA,KAAK,EAAEjB,SAAS,CAACkB,OAAV,CACLlB,SAAS,CAACmB,KAAV,CAAgB;AACdX,IAAAA,EAAE,EAAER,SAAS,CAACgB,MAAV,CAAiBI,UADP;AAEdX,IAAAA,KAAK,EAAET,SAAS,CAACgB,MAAV,CAAiBI,UAFV;AAGdV,IAAAA,UAAU,EAAEV,SAAS,CAACqB,MAAV,CAAiBD;AAHf,GAAhB,CADK;AAFc,CAAvB;;AAWA,SAASP,WAAT,GAAuB;AACrB,SAAQ,OAAMS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAgC,KAAIF,IAAI,CAACC,KAAL,CAChDD,IAAI,CAACE,MAAL,KAAgB,GADgC,CAEhD,KAAIF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAgC,GAFtC;AAGD","sourcesContent":["import PropTypes from 'prop-types';\nimport statisticalData from './statistical-data.json';\nimport styles from './Statistic.module.css';\n\nconst Statistics = ({ title }) => (\n  <section className={styles.statistics}>\n    {title && <h2 className={styles.title}>{title}</h2>}\n\n    <ul className={styles.list}>\n      {statisticalData.map(({ id, label, percentage }) => (\n        <li\n          className={styles.item}\n          key={id}\n          style={{ backgroundColor: randomColor() }}\n        >\n          <span className={styles.label}>{label}</span>\n          <span className={styles.percentage}>{percentage}%</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nexport default Statistics;\n\nStatistics.defaultProps = {\n  title: '',\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nfunction randomColor() {\n  return `rgb(${Math.round(Math.random() * 255)}, ${Math.round(\n    Math.random() * 255,\n  )}, ${Math.round(Math.random() * 255)})`;\n}"]},"metadata":{},"sourceType":"module"}