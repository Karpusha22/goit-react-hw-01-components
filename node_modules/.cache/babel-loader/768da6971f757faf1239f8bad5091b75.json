{"ast":null,"code":"import defaultImage from'./default.png';import styles from'./Profile.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Profile=function Profile(_ref){var avatar=_ref.avatar,name=_ref.name,tag=_ref.tag,location=_ref.location,stats=_ref.stats;return/*#__PURE__*/_jsxs(\"div\",{className:styles.profile,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.description,children:[/*#__PURE__*/_jsx(\"img\",{src:avatar,alt:\"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",className:styles.avatar,width:\"100\"}),/*#__PURE__*/_jsx(\"p\",{className:styles.name,children:name}),/*#__PURE__*/_jsx(\"p\",{className:styles.tag,children:tag}),/*#__PURE__*/_jsx(\"p\",{className:styles.location,children:location})]}),/*#__PURE__*/_jsx(\"ul\",{className:styles.stats,children:Object.entries(stats).map(function(stat){return/*#__PURE__*/_jsxs(\"li\",{className:styles.item,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.label,children:stat[0]}),/*#__PURE__*/_jsx(\"span\",{className:styles.quantity,children:stat[1]})]},stat[1]);})})]});};Profile.defaultProps={avatar:defaultImage};export default Profile;","map":{"version":3,"sources":["/Users/tanyakarpenko/Documents/Homework/goit-react-hw-01-components/src/components/Profile/Profile.js"],"names":["defaultImage","styles","Profile","avatar","name","tag","location","stats","profile","description","Object","entries","map","stat","item","label","quantity","defaultProps"],"mappings":"AACA,MAAOA,CAAAA,YAAP,KAAyB,eAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,UAAGC,CAAAA,MAAH,MAAGA,MAAH,CAAWC,IAAX,MAAWA,IAAX,CAAiBC,GAAjB,MAAiBA,GAAjB,CAAsBC,QAAtB,MAAsBA,QAAtB,CAAgCC,KAAhC,MAAgCA,KAAhC,oBACd,aAAK,SAAS,CAAEN,MAAM,CAACO,OAAvB,wBACE,aAAK,SAAS,CAAEP,MAAM,CAACQ,WAAvB,wBACE,YACE,GAAG,CAAEN,MADP,CAEE,GAAG,CAAC,+GAFN,CAGE,SAAS,CAAEF,MAAM,CAACE,MAHpB,CAIE,KAAK,CAAC,KAJR,EADF,cAOE,UAAG,SAAS,CAAEF,MAAM,CAACG,IAArB,UAA4BA,IAA5B,EAPF,cAQE,UAAG,SAAS,CAAEH,MAAM,CAACI,GAArB,UAA2BA,GAA3B,EARF,cASE,UAAG,SAAS,CAAEJ,MAAM,CAACK,QAArB,UAAgCA,QAAhC,EATF,GADF,cAYE,WAAI,SAAS,CAAEL,MAAM,CAACM,KAAtB,UACGG,MAAM,CAACC,OAAP,CAAeJ,KAAf,EAAsBK,GAAtB,CAA0B,SAAAC,IAAI,qBAC7B,YAAI,SAAS,CAAEZ,MAAM,CAACa,IAAtB,wBACE,aAAM,SAAS,CAAEb,MAAM,CAACc,KAAxB,UAAgCF,IAAI,CAAC,CAAD,CAApC,EADF,cAEE,aAAM,SAAS,CAAEZ,MAAM,CAACe,QAAxB,UAAmCH,IAAI,CAAC,CAAD,CAAvC,EAFF,GAAiCA,IAAI,CAAC,CAAD,CAArC,CAD6B,EAA9B,CADH,EAZF,GADc,EAAhB,CAwBAX,OAAO,CAACe,YAAR,CAAuB,CACrBd,MAAM,CAAEH,YADa,CAAvB,CAgBA,cAAeE,CAAAA,OAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport defaultImage from './default.png';\nimport styles from './Profile.module.css';\n\nconst Profile = ({ avatar, name, tag, location, stats }) => (\n  <div className={styles.profile}>\n    <div className={styles.description}>\n      <img\n        src={avatar}\n        alt=\"Аватар пользователя\"\n        className={styles.avatar}\n        width=\"100\"\n      />\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tag}>{tag}</p>\n      <p className={styles.location}>{location}</p>\n    </div>\n    <ul className={styles.stats}>\n      {Object.entries(stats).map(stat => (\n        <li className={styles.item} key={stat[1]}>\n          <span className={styles.label}>{stat[0]}</span>\n          <span className={styles.quantity}>{stat[1]}</span>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nProfile.defaultProps = {\n  avatar: defaultImage,\n};\n\nProfile.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}